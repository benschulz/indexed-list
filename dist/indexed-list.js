/*
 Copyright (c) 2015, Ben Schulz
 License: BSD 3-clause (http://opensource.org/licenses/BSD-3-Clause)
*/
function r(){var q,t;q=function(){return function(a){return a}(function(a,g,e,b){return{g:a,G:g,e:e,L:b}}(function(){function a(a,b){return a&&"function"===typeof a.valueOf&&b&&"function"===typeof b.valueOf?a.valueOf()<=b.valueOf()?a.valueOf()<b.valueOf()?-1:0:1:a<=b?a<b?-1:0:1}function g(a,b){var g=a.length,n=Array(g),f=Array(g),h;for(h=0;h<g;++h)n[h]=h,f[h]=a[h];h=a;a=f;f=h;n.sort(function(d,c){return b(a[d],a[c])||d-c});for(h=0;h<g;++h)f[h]=a[n[h]];return f}return{contains:function(a,g){return 0<=
a.indexOf(g)},D:function(a,g){return Array.prototype.concat.apply([],a.map(g))},j:function(e,b){var k=b||a;window.chrome?k=g(e,k):(e.sort(k),k=e);return k}}}(),function(){function a(a){return function(){return a}}return{M:a(!0),C:a(!1),J:a(void 0),K:a(null),N:a(0),w:a,H:function(a){return a}}}(),function(){function a(a,e){return Object.prototype.hasOwnProperty.call(a,e)}return{v:function(a,e){return a===e||!(!a||"function"!==typeof a.valueOf||!e||"function"!==typeof e.valueOf||a.valueOf()!==e.valueOf())},
extend:function(a){Array.prototype.slice.call(arguments,1).forEach(function(e){for(var b=Object.keys(e),k=0,n=b.length;k<n;k++){var f=b[k],h=Object.getOwnPropertyDescriptor(e,f);void 0!==h&&h.enumerable&&Object.defineProperty(a,f,h)}});return a},F:function(g,e){for(var b in g)a(g,b)&&e(b,g[b])},h:a}}(),{A:function(a){return a.replace(/([A-Z])/g,function(a){return"-"+a.toLowerCase()})},B:function(a){return a.replace(/-([a-z])/g,function(a){return a[1].toUpperCase()})},format:function(a){var g=arguments;
return a.replace(/{(\d+)}/g,function(a,b){var k=parseInt(b,10)+1;return typeof g.length<=k?a:g[k]})}}))}();t=function(a){return function(a){return a}(function(a){function e(e){var f={get length(){return this.length},contains:function(a){return 0<=this.l(a)},filter:function(a){for(var d=[],c=0;c<this.length;++c){var p=this.get(c);a(p,c,this)&&d.push(p)}return new b(d)},forEach:function(a){for(var d=0,c=this.length;d<c;++d)a(this.get(d),d,this)},get:function(a){return this.get(a)},map:function(a){for(var d=
Array(this.length),c=0;c<this.length;++c)d[c]=a(this.get(c),c,this);return new b(d)},readOnly:function(){return new k(this)},slice:function(a,d){var c=this.length;a=0>=arguments.length?0:0<=a?a:c+a;d=1>=arguments.length?c:0<=d?d:c+d;for(var c=d-a,p=Array(c),m=0;m<c;++m)p[m]=this.get(a+m);return new b(p)},k:function(){var a=Array(this.length);this.forEach(function(d,c){a[c]=d});return a},l:function(a){for(var d=0;d<this.length;++d)if(this.get(d)===a)return d;return-1}};return a.e.extend(f,{get length(){return this.length},
contains:f.contains,filter:f.filter,forEach:f.forEach,get:function(a){return this.get(a)},map:f.map,readOnly:f.readOnly,slice:f.slice,toArray:f.k,tryFirstIndexOf:f.l},e)}function b(a){this.d=a}function k(a){this.f=a}b.prototype=e({get length(){return this.d.length},get:function(a){return this.d[a]},k:function(){return this.d.slice()}});k.prototype=e({get length(){return this.f.length},get:function(a){return this.f.get(a)}});return{I:function(a){return new b(a||[])},r:e}}(a))}(q);return function(a){return a}(function(a){a.prototype.clear=
a.prototype.clear;a.prototype.getById=a.prototype.p;a.prototype.containsById=a.prototype.n;a.prototype.defineOrdering=a.prototype.o;a.prototype.removeAllById=a.prototype.i;a.prototype.removeAll=a.prototype.s;a.prototype.updateAll=a.prototype.u;a.prototype.tryUpdateAll=a.prototype.t;a.prototype.addAll=a.prototype.m;a.prototype.insertAll=a.prototype.q;return a}(function(a,g){function e(a){if("string"!==typeof a)throw Error("Ids must be strings. (given: `"+a+"`, type: `"+typeof a+"`)");return a}function b(d,
c){return a.e.h(d,e(c))?d[c]:-1}function k(a,c){var p=b(a,c);if(0>p)throw Error("Es existiert kein Eintrag mit Id '"+c+"'.");return p}function n(a,c,b,m,l){if(m>=l)return m;var e=Math.floor((m+l)/2);return 0>c(b,a[e])?n(a,c,b,m,e):n(a,c,b,e+1,l)}function f(a,c,b,e,l){function u(e,l){var m=g.length,f=c.slice(e,l);g=g.concat(f);f.forEach(function(c){b[a(c)]=m;++m})}var g=[],f=0;e.forEach(function(a){u(f,a);f=a;l(g)});u(f,c.length);return g}function h(a){this.b=function(c){return e(a(c))};this.elements=
[];this.a={};this.c=null}h.prototype=g.r({get length(){return this.elements.length},get:function(a){return this.elements[a]},p:function(a){a=k(this.a,a);return this.elements[a]},clear:function(){this.elements=[];this.a={}},contains:function(a){a=(0,this.b)(a);return 0<=b(this.a,a)},n:function(a){return 0<=b(this.a,a)},o:function(d){var c=this.b,b=this.elements,e=this.a;this.c=d;a.g.j(b,d);d=!1;for(var l=0;l<b.length;++l){var f=c(b[l]);d=d||e[f]!==l;e[f]=l}return d},i:function(a){if(a.length){var c=
this.b,b=this.elements,e=this.a;a=a.map(function(a){return k(e,a)+1});a.sort(function(a,c){return a-c});this.elements=f(c,b,e,a,function(a){a=a.pop();a=c(a);delete e[a]})}},s:function(a){this.i(a.map(this.b))},u:function(a){if(this.c)throw Error("`updateAll` must not be called on an ordered `IndexedTable`. Use a combination of order-preserving `tryUpdateAll`, `removeAll` and `insertAll` instead.");if(a.length){var c=this.b,b=this.elements,e=this.a;a.forEach(function(a){var d=k(e,c(a));b[d]=a})}},
t:function(a){if(!this.c)throw Error("`tryUpdateAll` is designed for ordered `IndexedTable`s. For unordered ones, use `updateAll` instead.");if(!a.length)return[];var c=this.b,b=this.elements,e=this.a,f=this.c,g=[];a.forEach(function(a){var d=k(e,c(a));0!==f(a,b[d])?g.push(a):b[d]=a});return g},m:function(d){if(this.c)throw Error("`addAll` must not be called on an ordered `IndexedTable`. Use order-preserving `insertAll` instead.");if(d.length){var c=this.b,b=this.elements,e=this.a;d.forEach(function(d){var f=
c(d);if(a.e.h(e,f))throw Error("The list already contains an element with id `"+f+"`. Did you mean to call `updateAll`?.");e[f]=b.push(d)-1})}},q:function(d){if(!this.c)throw Error("`insertAll` is designed for ordered `IndexedTable`s. For unordered ones, use `addAll` instead.");if(d.length){var c=this.b,b=this.elements,e=this.a,g=this.c;a.g.j(d,g);var h=0,k=[];d.forEach(function(a){a=n(b,g,a,h,b.length);k.push(a);h=a});h=0;this.elements=f(c,b,e,k,function(a){var b=d[h],f=c(b),g=a.length;a.push(b);
e[f]=g;++h})}}});return h}(q,t)))}"function"===typeof define&&define.amd?define([],r):window["indexed-list"]=r();
