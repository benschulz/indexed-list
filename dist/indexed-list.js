/*
 Copyright (c) 2015, Ben Schulz
 License: BSD 3-clause (http://opensource.org/licenses/BSD-3-Clause)
*/
var l;
function r(){var q,t;q=function(){var a;a=function(){function a(h,e){return Object.prototype.hasOwnProperty.call(h,e)}return{G:function(a,e){if(a===e)return!0;var k=!!e&&"function"===typeof e.valueOf;return!!a&&"function"===typeof a.valueOf&&k&&a.valueOf()===e.valueOf()},extend:function(a,e){Array.prototype.slice.call(arguments,1).forEach(function(e){for(var n=Object.keys(e),b=0,g=n.length;b<g;b++){var c=n[b],d=Object.getOwnPropertyDescriptor(e,c);void 0!==d&&d.enumerable&&Object.defineProperty(a,c,
d)}});return a},L:function(h,e){for(var k in h)a(h,k)&&e(k,h[k])},h:a,M:function(h,e){var k={},n;for(n in h)a(h,n)&&(k[n]=e(h[n],n,h));return k}}}();return function(a){return a}(function(a,h,e){return{d:a,e:h,j:e}}(function(a){function h(b){return b.filter(function(b,c,d){return d.lastIndexOf(b)===c})}function e(b,g){for(var c=b.length,d=-1,m=0;m<c;++m)if(g(b[m])){if(0<=d)throw Error("Multiple elements match the predicate.");d=m}return d}function k(b,g){return b&&"function"===typeof b.valueOf&&g&&
"function"===typeof g.valueOf?b.valueOf()<=g.valueOf()?b.valueOf()<g.valueOf()?-1:0:1:b<=g?b<g?-1:0:1}function n(b,g){var c=b.length,d=Array(c),m=Array(c),f;for(f=0;f<c;++f)d[f]=f,m[f]=b[f];f=b;b=m;m=f;d.sort(function(c,d){return g(b[c],b[d])||c-d});for(f=0;f<c;++f)m[f]=b[d[f]];return m}return{contains:function(b,g){return 0<=b.indexOf(g)},J:function(b){if(50<b.length){for(var g=b.length,c={},d,m=0;m<g;++m)if(d=b[m],"string"===typeof d)if(a.h(c,d))break;else c[d]=!0;else if(b.lastIndexOf(d)!==m)break;
if(!(m>=g)){for(var f=b.slice(0,m);m<g;++m)d=b[m],"string"===typeof d?a.h(c,d)||(c[d]=!0,f.push(d)):b.lastIndexOf(d)===m&&f.push(d);b=f}}else b=h(b);return b},K:function(b,g){return Array.prototype.concat.apply([],b.map(g))},O:function(b,g){var c=e(b,g);if(0>c)throw Error("None of the elements matches the predicate.");return b[c]},P:function(b,g){var c=e(b,g);return 0<=c?b[c]:null},m:function(b,g){var c=g||k;window.chrome?c=n(b,c):(b.sort(c),c=b);return c}}}(a),a,{H:function(a){return a.replace(/([A-Z])/g,
function(a){return"-"+a.toLowerCase()})},I:function(a){return a.replace(/-([a-z])/g,function(a){return a[1].toUpperCase()})},format:function(a){var h=arguments;return a.replace(/{(\d+)}/g,function(a,k){var n=parseInt(k,10)+1;return typeof h.length<=n?a:h[n]})}}))}();t=function(a){return function(a){return a}(function(a){function h(n){var b={get length(){return this.length},contains:function(a){return 0<=this.o(a)},filter:function(a){for(var c=this.length,d=[],b=0;b<c;++b){var f=this.get(b);a(f,b,
this)&&d.push(f)}return new e(d)},forEach:function(a){for(var c=this.length,d=0;d<c;++d)a(this.get(d),d,this)},get:function(a){return this.get(a)},map:function(a){for(var c=this.length,d=Array(c),b=0;b<c;++b)d[b]=a(this.get(b),b,this);return new e(d)},readOnly:function(){return new k(this)},reduce:function(a,c){var d=1<arguments.length,b=this.length;if(!d&&0===b)throw new TypeError("An empty list can not be reduced, specify an initial value.");for(var f=d?c:this.get(0),d=d?0:1;d<b;++d)f=a(f,this.get(d));
return f},slice:function(a,c){var d=this.length;a=0>=arguments.length?0:0<=a?a:d+a;c=1>=arguments.length?d:0<=c?c:d+c;for(var d=c-a,b=Array(d),f=0;f<d;++f)b[f]=this.get(a+f);return new e(b)},n:function(){for(var a=this.length,c=Array(a),d=0;d<a;++d)c[d]=this.get(d);return c},o:function(a){for(var c=this.length,d=0;d<c;++d)if(this.get(d)===a)return d;return-1}};return a.e.extend(b,{get length(){return this.length},contains:b.contains,filter:b.filter,forEach:b.forEach,get:function(a){return this.get(a)},
map:b.map,readOnly:b.readOnly,reduce:b.reduce,slice:b.slice,toArray:b.n,tryFirstIndexOf:b.o},n)}function e(a){this.k=a}function k(a){this.p=a}e.prototype=h({get length(){return this.k.length},get:function(a){return this.k[a]},n:function(){return this.k.slice()}});k.prototype=h({get length(){return this.p.length},get:function(a){return this.p.get(a)}});return{N:function(a){return new e(a||[])},v:h}}(a))}(q);return function(a){return a}(function(a){a.prototype.clear=a.prototype.clear;a.prototype.getById=
a.prototype.s;a.prototype.containsById=a.prototype.r;a.prototype.removeAll=a.prototype.w;a.prototype.removeAllById=a.prototype.l;a.prototype.sortBy=a.prototype.A;a.prototype.updateAll=a.prototype.C;a.prototype.tryUpdateAll=a.prototype.B;a.prototype.addAll=a.prototype.q;a.prototype.insertAll=a.prototype.u;return a}(function(a,q){function h(c){if("string"!==typeof c)throw Error("Ids must be strings. (given: `"+c+"`, type: `"+typeof c+"`)");return c}function e(c,d){return a.e.h(c,h(d))?c[d]:-1}function k(c,
a){var b=e(c,a);if(0>b)throw Error("No element with id `"+a+"`.");return b}function n(c,a,b,f,p){if(f>=p)return f;var e=Math.floor((f+p)/2);return 0>a(b,c[e])?n(c,a,b,f,e):n(c,a,b,e+1,p)}function b(c,a,b,f,e){function g(f,e){var p=h.length,k=a.slice(f,e);h=h.concat(k);k.forEach(function(a){b[c(a)]=p;++p})}var h=[],k=0;f.forEach(function(a){g(k,a);k=a;e(h)});g(k,a.length);return h}function g(a){this.f=function(b){return h(a(b))};this.b=[];this.c={};this.g=null}g.prototype=q.v({get length(){return this.b.length},
get:function(a){return this.b[a]},s:function(a){return this.b[k(this.c,a)]},Q:function(a){a=e(this.c,a);return 0<=a?this.b[a]:null},clear:function(){this.b=[];this.c={}},contains:function(a){a=(0,this.f)(a);return 0<=e(this.c,a)},r:function(a){return 0<=e(this.c,a)},w:function(a){this.l(a.map(this.f))},l:function(a){if(a.length){var d=this.f,e=this.b,f=this.c;a=a.map(function(a){return k(f,a)+1});a.sort(function(a,b){return a-b});this.b=b(d,e,f,a,function(a){a=a.pop();a=d(a);delete f[a]})}},A:function(b){var d=
this.f,e=this.b,f=this.c;this.g=b;a.d.m(e,b);b=!1;for(var g=0;g<e.length;++g){var h=d(e[g]);b=b||f[h]!==g;f[h]=g}return b},C:function(a){if(this.g)throw Error("`updateAll` must not be called on a sorted `IndexedTable`. Use a combination of order-preserving `tryUpdateAll`, `removeAll` and `insertAll` instead.");if(a.length){var b=this.f,e=this.b,f=this.c;a.forEach(function(a){var c=k(f,b(a));e[c]=a})}},B:function(a){if(!this.g)throw Error("`tryUpdateAll` is designed for sorted `IndexedTable`s. For unsorted ones, use `updateAll` instead.");
if(!a.length)return[];var b=this.f,e=this.b,f=this.c,g=this.g,h=[];a.forEach(function(a){var c=k(f,b(a));0!==g(a,e[c])?h.push(a):e[c]=a});return h},q:function(b){if(this.g)throw Error("`addAll` must not be called on an sorted `IndexedTable`. Use order-preserving `insertAll` instead.");if(b.length){var d=this.f,e=this.b,f=this.c;b.forEach(function(b){var c=d(b);if(a.e.h(f,c))throw Error("The list already contains an element with id `"+c+"`. Did you mean to call `updateAll`?.");f[c]=e.push(b)-1})}},
u:function(c){if(!this.g)throw Error("`insertAll` is designed for sorted `IndexedTable`s. For unsorted ones, use `addAll` instead.");if(c.length){var d=this.f,e=this.b,f=this.c,g=this.g;a.d.m(c,g);var h=0,k=[];c.forEach(function(a){a=n(e,g,a,h,e.length);k.push(a);h=a});h=0;this.b=b(d,e,f,k,function(a){var b=c[h],e=d(b),g=a.length;a.push(b);f[e]=g;++h})}}});return g}(q,t)))}"function"===typeof define&&define.amd?define([],r):window["indexed-list"]=r();