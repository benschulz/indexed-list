/*
 Copyright (c) 2015, Ben Schulz
 License: BSD 3-clause (http://opensource.org/licenses/BSD-3-Clause)
*/
function q(){var p,r;p=function(){var a;a=function(){function a(e,k){return Object.prototype.hasOwnProperty.call(e,k)}return{n:function(e,a){if(e===a)return!0;var n=!!a&&"function"===typeof a.valueOf;return!!e&&"function"===typeof e.valueOf&&n&&e.valueOf()===a.valueOf()},extend:function(a,n){Array.prototype.slice.call(arguments,1).forEach(function(n){for(var m=Object.keys(n),b=0,g=m.length;b<g;b++){var d=m[b],c=Object.getOwnPropertyDescriptor(n,d);void 0!==c&&c.enumerable&&Object.defineProperty(a,
d,c)}});return a},D:function(e,k){for(var h in e)a(e,h)&&k(h,e[h])},e:a,F:function(e,k){var h={},m;for(m in e)a(e,m)&&(h[m]=k(e[m],m,e));return h}}}();return function(a){return a}(function(a,e,k,h){return{i:a,I:e,g:k,N:h}}(function(a){function e(b){return b.filter(function(b,d,c){return c.lastIndexOf(b)===d})}function k(b,g){for(var d=b.length,c=-1,l=0;l<d;++l)if(g(b[l])){if(0<=c)throw Error("Multiple elements match the predicate.");c=l}return c}function h(b,g){return b&&"function"===typeof b.valueOf&&
g&&"function"===typeof g.valueOf?b.valueOf()<=g.valueOf()?b.valueOf()<g.valueOf()?-1:0:1:b<=g?b<g?-1:0:1}function m(b,g){var d=b.length,c=Array(d),l=Array(d),f;for(f=0;f<d;++f)c[f]=f,l[f]=b[f];f=b;b=l;l=f;c.sort(function(d,c){return g(b[d],b[c])||d-c});for(f=0;f<d;++f)l[f]=b[c[f]];return l}return{contains:function(b,g){return 0<=b.indexOf(g)},p:function(b){if(50<b.length){for(var g=b.length,d={},c,l=0;l<g;++l)if(c=b[l],"string"===typeof c)if(a.e(d,c))break;else d[c]=!0;else if(b.lastIndexOf(c)!==
l)break;if(!(l>=g)){for(var f=b.slice(0,l);l<g;++l)c=b[l],"string"===typeof c?a.e(d,c)||(d[c]=!0,f.push(c)):b.lastIndexOf(c)===l&&f.push(c);b=f}}else b=e(b);return b},q:function(b,g){return Array.prototype.concat.apply([],b.map(g))},G:function(b,g){var d=k(b,g);if(0>d)throw Error("None of the elements matches the predicate.");return b[d]},J:function(b,g){var d=k(b,g);return 0<=d?b[d]:null},k:function(b,g){var d=g||h;window.chrome?d=m(b,d):(b.sort(d),d=b);return d}}}(a),function(){function a(e){return function(){return e}}
return{O:a(!0),H:a(!1),L:a(void 0),M:a(null),P:a(0),C:a,K:function(a){return a}}}(),a,{n:function(a){return a.replace(/([A-Z])/g,function(a){return"-"+a.toLowerCase()})},p:function(a){return a.replace(/-([a-z])/g,function(a){return a[1].toUpperCase()})},format:function(a){var e=arguments;return a.replace(/{(\d+)}/g,function(a,h){var m=parseInt(h,10)+1;return typeof e.length<=m?a:e[m]})}}))}();r=function(a){return function(a){return a}(function(a){function e(e){var b={get length(){return this.length},
contains:function(a){return 0<=this.m(a)},filter:function(a){for(var d=this.length,c=[],b=0;b<d;++b){var f=this.get(b);a(f,b,this)&&c.push(f)}return new k(c)},forEach:function(a){for(var d=this.length,c=0;c<d;++c)a(this.get(c),c,this)},get:function(a){return this.get(a)},map:function(a){for(var d=this.length,c=Array(d),b=0;b<d;++b)c[b]=a(this.get(b),b,this);return new k(c)},readOnly:function(){return new h(this)},reduce:function(a,d){var c=1<arguments.length,b=this.length;if(!c&&0===b)throw new TypeError("An empty list can not be reduced, specify an initial value.");
for(var f=c?d:this.get(0),c=c?0:1;c<b;++c)f=a(f,this.get(c));return f},slice:function(a,d){var c=this.length;a=0>=arguments.length?0:0<=a?a:c+a;d=1>=arguments.length?c:0<=d?d:c+d;for(var c=d-a,b=Array(c),f=0;f<c;++f)b[f]=this.get(a+f);return new k(b)},l:function(){for(var a=this.length,d=Array(a),c=0;c<a;++c)d[c]=this.get(c);return d},m:function(a){for(var d=this.length,c=0;c<d;++c)if(this.get(c)===a)return c;return-1}};return a.g.extend(b,{get length(){return this.length},contains:b.contains,filter:b.filter,
forEach:b.forEach,get:function(a){return this.get(a)},map:b.map,readOnly:b.readOnly,reduce:b.reduce,slice:b.slice,toArray:b.l,tryFirstIndexOf:b.m},e)}function k(a){this.f=a}function h(a){this.h=a}k.prototype=e({get length(){return this.f.length},get:function(a){return this.f[a]},l:function(){return this.f.slice()}});h.prototype=e({get length(){return this.h.length},get:function(a){return this.h.get(a)}});return{q:function(a){return new k(a||[])},u:e}}(a))}(p);return function(a){return a}(function(a){a.prototype.clear=
a.prototype.clear;a.prototype.getById=a.prototype.s;a.prototype.containsById=a.prototype.r;a.prototype.removeAll=a.prototype.v;a.prototype.removeAllById=a.prototype.j;a.prototype.sortBy=a.prototype.w;a.prototype.updateAll=a.prototype.B;a.prototype.tryUpdateAll=a.prototype.A;a.prototype.addAll=a.prototype.o;a.prototype.insertAll=a.prototype.t;return a}(function(a,n){function e(a){if("string"!==typeof a)throw Error("Ids must be strings. (given: `"+a+"`, type: `"+typeof a+"`)");return a}function k(d,
c){return a.g.e(d,e(c))?d[c]:-1}function h(a,c){var b=k(a,c);if(0>b)throw Error("Es existiert kein Eintrag mit Id '"+c+"'.");return b}function m(a,c,b,f,e){if(f>=e)return f;var g=Math.floor((f+e)/2);return 0>c(b,a[g])?m(a,c,b,f,g):m(a,c,b,g+1,e)}function b(a,c,b,f,e){function g(f,e){var t=k.length,h=c.slice(f,e);k=k.concat(h);h.forEach(function(c){b[a(c)]=t;++t})}var k=[],h=0;f.forEach(function(a){g(h,a);h=a;e(k)});g(h,c.length);return k}function g(a){this.c=function(c){return e(a(c))};this.a=[];
this.b={};this.d=null}g.prototype=n.u({get length(){return this.a.length},get:function(a){return this.a[a]},s:function(a){a=h(this.b,a);return this.a[a]},clear:function(){this.a=[];this.b={}},contains:function(a){a=(0,this.c)(a);return 0<=k(this.b,a)},r:function(a){return 0<=k(this.b,a)},v:function(a){this.j(a.map(this.c))},j:function(a){if(a.length){var c=this.c,e=this.a,f=this.b;a=a.map(function(a){return h(f,a)+1});a.sort(function(a,c){return a-c});this.a=b(c,e,f,a,function(a){a=a.pop();a=c(a);
delete f[a]})}},w:function(b){var c=this.c,e=this.a,f=this.b;this.d=b;a.i.k(e,b);b=!1;for(var g=0;g<e.length;++g){var h=c(e[g]);b=b||f[h]!==g;f[h]=g}return b},B:function(a){if(this.d)throw Error("`updateAll` must not be called on a sorted `IndexedTable`. Use a combination of order-preserving `tryUpdateAll`, `removeAll` and `insertAll` instead.");if(a.length){var b=this.c,e=this.a,f=this.b;a.forEach(function(a){var d=h(f,b(a));e[d]=a})}},A:function(a){if(!this.d)throw Error("`tryUpdateAll` is designed for sorted `IndexedTable`s. For unsorted ones, use `updateAll` instead.");
if(!a.length)return[];var b=this.c,e=this.a,f=this.b,g=this.d,k=[];a.forEach(function(a){var d=h(f,b(a));0!==g(a,e[d])?k.push(a):e[d]=a});return k},o:function(b){if(this.d)throw Error("`addAll` must not be called on an sorted `IndexedTable`. Use order-preserving `insertAll` instead.");if(b.length){var c=this.c,e=this.a,f=this.b;b.forEach(function(b){var d=c(b);if(a.g.e(f,d))throw Error("The list already contains an element with id `"+d+"`. Did you mean to call `updateAll`?.");f[d]=e.push(b)-1})}},
t:function(d){if(!this.d)throw Error("`insertAll` is designed for sorted `IndexedTable`s. For unsorted ones, use `addAll` instead.");if(d.length){var c=this.c,e=this.a,f=this.b,g=this.d;a.i.k(d,g);var h=0,k=[];d.forEach(function(a){a=m(e,g,a,h,e.length);k.push(a);h=a});h=0;this.a=b(c,e,f,k,function(a){var b=d[h],e=c(b),g=a.length;a.push(b);f[e]=g;++h})}}});return g}(p,r)))}"function"===typeof define&&define.amd?define([],q):window["indexed-list"]=q();
